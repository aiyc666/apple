@color: red;
.a {
  color: @color;
  //background: @{color}; XXX
}

// 选择器
@s1: .a;
@s2: b;
@s3: ~".a .b .c, .d.d ~ .e + .f";
@s4: ~"div > p > span";

@{s1} { color: red; }
.@{s2} { color: red; }
#@{s2} { color: red; }
@{s2} { color: red; }
@{s2}[@{s2}='x'] { color: red; }
@{s3} { color: red; }
@{s4} { color: red; }
@{s1} + @{s2}, @{s3}:hover { color: red; }
@{s1}-@{s2} { color: red; }
@a: aa;
@aa: bb;
@bb: cc;

.var {
  //val: @{@@a};
}


// url
@img: "../images";
.a { background: url("@{img}/a.png"); }

// 属性
@h: height;
@m: max;
@co: co;
@lor: lor;
.a {
    @{h}: 30px;
  line-@{h}: 30px;
    @{m}-@{h}: 30px;
    @{co}@{lor}: red;
}

// 懒加载、作用域、默认值
div { color: @late; }
@late: red;
@var: 0;
.a {
  @var: 1;
  .b {
    @var: 2;
    height: @var;
    @var: 22;
  }
  height: @var;
}
@base-color: blue;
@dark-color: darken(@base-color, 10%);
div { color: @dark-color; }
@base-color: red;

a:hover:active { color: red; }

// 继承
.g { color: red; }
.i {
  height: 0;
  .ii { border: none; }
}
.h:extend(.g, .i) {
  width: 0;
}
.j {
  &:extend(.g, .i, .h);
  font-size: 12px;
}
.gg {
  color: red;
  .gg-2 {
    font-size: 5px;
  }
}
.hh:extend(.gg) {}

li.list > a { color: red; }
button.list-style {
  &:extend(li.list > a); // use the same list styles
}
.k:extend(.x2){ color: red; };

// 混合
.mx(@p1: red) {
  color: @p1;
  .mx-2 {
    color: blue;
  }
}
.mx1 {
  .mx();
}

@device: pc;
@device: pad;
.effect(pc) {
  &:hover { .on; }
}
.effect(pad) {
  &:active { .on; }
}
.effect() {
  &:hover when (@device=pc) { .on(); }
  &:active when (@device=pad) { .on(); }
}
.effect() when (@device=pc) { &:hover { .on; } }
.effect() when (@device=pad) { &:active { .on; } }
a {
  .on() { color: yellow; width: 1px;}
  //.mode !important;
}



.x() {
  p1: 1;
}
.x(@a: a, @b: b, @c: c) {
  p1: @a;
  p2: @b;
  p3: @c;
  p4: @arguments;
}
.x(...) {
  p5: @arguments;
  //p55: @rest;
}
.x(@a, ...) {
  p6: @arguments;
}
.x(@a, @b...) {
  p7: @b;
}
.x(x1, @a) {
  p8: @a;
}
.x(x2, @a) {
  p9: @a;
}
.xx(@a) {
  //@a();
}
.xx {
  //.x();
  //.x(aa);
  //.x(@b:bb, aa);
  //.x(@b: bb, aa, cc);
  //.x(aa, bb, cc);
  //.x(x1, a);
  //@sw: x1;
  //.x(@sw, aaa);
  .c(){ p: cc; }
  .xx(@a: b);
}
